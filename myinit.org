#+STARTUP: overview 
#+PROPERTY: header-args :comments yes :results silent
* Systems  
** General Adjustments
 #+begin_src emacs-lisp
 ;;; Visual Stuff
 ;;;; No Bars n stuff
 (menu-bar-mode -1)
 (tool-bar-mode -1)
 #+end_src
** Mac Specific
  - Found this one.  Has to do with keys.
    
#+begin_src emacs-lisp
  (setq mac-option-modifier 'super)
  (setq mac-command-modifier 'meta)
#+end_src

** Buffer Management
   - This is likely to go away when I figure out helm stuff.

   #+begin_src emacs-lisp
;;; Buffer Management
(global-set-key "\C-x\C-b" 'electric-buffer-list)
   #+end_src
** Security
#+begin_src emacs-lisp
;;; Auth info stuff
(setq epa-pinentry-mode 'loopback)
(setq auth-sources '("~/.authinfo.gpg"))
(setq auth-source-debug t)
#+end_src

** Backup Files
  - I found this to be pretty helpful.
  #+begin_src emacs-lisp
;;; Backup File Creation 
(setq make-backup-files nil)
(require 'backup-each-save)
(add-hook 'after-save-hook 'backup-each-save)
  #+end_src  

** Repositories
   #+begin_src emacs-lisp
;;;; Repository
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/")t)
(add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
   #+end_src

* Applications
** Org Mode
   - org-tempo gets our template stuff back like "<s" , etc.
     
   #+begin_src emacs-lisp
(add-hook 'org-mode-hook 'turn-on-flyspell)
(require 'org-tempo)
   #+end_src
** Org Roam
   - Very much a work in progress.
   #+begin_src emacs-lisp
;;; org-roam
;;;; v2 acknowledgement
(setq org-roam-v2-ack t)
(setq org-roam-directory "~/org-roam")

(setq org-roam-tag-sources '(prop all-directories))

;; This option sounded interesting....
(setq org-roam-completion-everywhere t)

;; Should I have a separate area for hooks instead of mixed up?
;;(add-hook 'after-init-hook 'org-roam-mode)

;; Make it such that saving updates the cache.
(setq org-roam-db-update-method 'immediate)

;;; Buffer modes.
(setq org-roam-mode-sections
      (list #'org-roam-backlinks-section
            #'org-roam-reflinks-section
            #'org-roam-unlinked-references-section
            ))

;;; Styling the buffer
(add-to-list 'display-buffer-alist
             '(("\\*org-roam\\*"
                (display-buffer-in-direction)
                (direction . right)
                (window-width . 0.33)
                (window-height . fit-window-to-buffer))))


;;; Capture  tmplate information
(setq org-roam-capture-templates
'(("d" "default" plain "%?"
     :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org"
                        "#+title: ${title}\n")
     :unnarrowed t))
)
   #+end_src
** Magit
   #+begin_src emacs-lisp
;;; Magit/Github style stuff
(use-package magit)
(use-package ghub)
(setq ghub-use-workaround-for-emacs-bug 'force)
(setq magit-git-debug t)
(setq password-cache nil)
(setq magit-process-find-password-functions '(magit-process-password-auth-source))

(use-package magithub
  :after magit
  :ensure t
  :config (magithub-feature-autoinject t))

   #+end_src
* Consolidated
#+begin_src emacs-lisp
;;; Package Stuff
(require 'use-package)

;; Set completion system

;;;; magithub
;;(require 'magit-gh-pulls)
;;(add-hook 'magit-mode-hook 'turn-on-magit-gh-pulls)

;; General Hooks 'n' stuff
;;(add-hook 'after-init-hook 'global-company-mode)

#+end_src
